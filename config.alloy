otelcol.receiver.otlp "example" {
  grpc {
    endpoint = "0.0.0.0:4319"
  }

  http {
    endpoint = "0.0.0.0:4318"
  }

  output {
    logs    = [otelcol.processor.batch.example.input]
    traces  = [otelcol.processor.batch.example.input]
    metrics = [otelcol.processor.batch.example.input]
  }
}

otelcol.processor.batch "example" {
  output {
    logs    = [otelcol.exporter.loki.grafana_cloud_logs.input]
    traces  = [otelcol.exporter.otlp.grafana_cloud_traces.input]
    metrics = [otelcol.exporter.prometheus.grafana_cloud_metrics.input]
  }
}

otelcol.exporter.otlp "grafana_cloud_traces" {
  client {
    endpoint = "tempo:4317"
    tls {
          insecure = true
        }
  }
}


otelcol.exporter.loki "grafana_cloud_logs" {
  forward_to = [loki.write.grafana_cloud_logs.receiver]
}

loki.write "grafana_cloud_logs" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push"
  }
}


otelcol.exporter.prometheus "grafana_cloud_metrics" {
        forward_to = [prometheus.remote_write.grafana_cloud_metrics.receiver]
    }

prometheus.remote_write "grafana_cloud_metrics" {
    endpoint {
        url = "http://prometheus:9090/api/v1/write"
    }
}


pyroscope.receive_http "default" {
    http {
        listen_address = "0.0.0.0"
        listen_port = 9999
    }
    forward_to = [pyroscope.write.production.receiver]
}

pyroscope.write "production" {
    endpoint {
        url = "http://pyroscope:4040"
    }
}